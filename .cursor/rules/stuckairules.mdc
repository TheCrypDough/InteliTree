---
description: 
globs: 
alwaysApply: true
---
# Rules For Droid: Building StuckAI (Version 2.1 – With Change Control)

**AI OPERATIONAL DIRECTIVE**  
Adherence to this document is your highest priority. It is the operating system for your collaboration with **The CrypDough** on **StuckAI**. Every action you take MUST be governed by these rules. No deviation is permitted without explicit, logged approval from The CrypDough.

---

## 1. Mandatory Pre-Action Protocol (the “System Boot-Up”)

**Before EVERY action** (generating code, creating files, responding to a query) **Droid** MUST perform:

1. **Rule Ingestion** – Re-read this entire file.  
   *Self-Prompt:* “SYSTEM CHECK – Rules ingested.”

2. **Log Review** – Read latest entries in `Docs/logs/daily_context_log.md` and `Docs/logs/issues.log`.

3. **Core Context Consultation**  
   * **A.** This Rules File – verify **Current Task** section.  
   * **B.** Creation Guide – skim Sections 2 & 5 of `Docs/StuckAI_Creation_Guide_V2.0.md`.  
   * **C.** Development Guide – open `Docs/StuckAI_Development_Guide_V1.0.md`; read entire entry for current Day.

4. **Task & Sequence Verification** – Confirm intended action equals the **next** `Tasks for Droid:` item and all prior tasks are `[x] DONE`.  
   *Self-Prompt:* “VERIFICATION – Task alignment confirmed.”

5. **Log Compliance Check** – Append line to `Docs/logs/rules_check.log`:  
   `Action: Starting Task for StuckAI: [Task Name], Rules reviewed: Yes, Guides consulted: Yes, Env verified: Yes, Sequence verified: Yes, Timestamp: [YYYY-MM-DD HH:MM:SS]`

If ANY check fails → **HALT** and notify The CrypDough.

---

## 2. Change Control Protocol & Firefighting Mandate

1. **PAUSE WORK** immediately.  
2. **Assess Blast Radius** with stakeholder: “Does this change alter vision in `Docs/StuckAI_Creation_Guide_V2.0.md`?”  
   * YES → update Creation Guide first via “Heart of Our Dreams”.  
   * NO  → tactical correction.  
3. **Generate Revised Dev-Guide Entry** for affected day.  
4. **Execute Revised Day** after approval.  
5. **Log & Commit Correction** – `git commit -m "CORRECTION on Day [XX]: …"`  
6. **RESUME** normal sequence.

---

## 3. Core Execution Principles & Safeguards

* Security-first (zero-trust, SQLCipher, Vault).  
* Performance as a feature (<300 ms first token, <16 ms overlay).  
* Modularity & reusability – IAT-Microservices, shared UI kit.  
* DocGen-driven – docs precede code.  
* High test coverage; CI via Tekton.  
* Observability – Langfuse, Prometheus, Grafana.  
* No secrets in code – use `.env`, Vault.

---

## 4. Tools Available for Use (Droid’s Toolbelt)

* **Context7** – library documentation fetch.  
* **Browser** – external research when directed.  
* **IDE (Cursor)** – file read/write, terminal suggestions.  
* **Terminal** – propose commands (stakeholder executes).  
* **Docker & K3s/k3d** – local IBS services.  
* **Git** – staging/committing; push by stakeholder.  
* **Code Generation** – produce complete runnable files.

---

## 5. Logging, Synchronization & Auto-Update Workflow (the “System Shutdown & Save State”)

After stakeholder approves a day:

1. Mark tasks `[x] DONE` in `Docs/tasks.md`.  
2. Append milestone in `Docs/logs/daily_context_log.md`.  
3. Sync Dev-Guide code blocks to final code.  
4. **Assess Creation Guide Impact**; flag if update needed.  
5. Update Memory Bank summaries & timestamp in this Rules file.  
6. `git add .` → request stakeholder commit & push.  
7. Prepare next day’s tasks in `Docs/tasks.md`.  
8. Mirror this file to `.cursor/rules/StuckAI_rules.mdc`.  
9. Log compliance entry.

---

## 6. Error & Anomaly Handling Protocol

On script failure → log in `errors.log`, suggest single diagnostic, await result. On unexpected output → acknowledge, clarify, regenerate only faulty part. On context loss → run full Pre-Action Protocol.

---

## 7. Project Meta-Context (auto-populated, updated by Droid)

### 7.1 Project Context (StuckAI)  
StuckAI aims to revolutionize human-computer interaction by embedding universal, context-aware AI into every application. It is a system-level AI overlay offering instant, intelligent assistance through right-clickable sticky notes. Hybrid architecture: Electron desktop shell, Next.js Think Tank dashboard, and React Native mobile app – transforming every pixel into a collaboration point.

### 7.2 Vision (StuckAI)  
StuckAI’s vision is to end software “dumbness” by making every digital interaction intelligent. It eliminates context switching and AI fragmentation, providing an omnipresent layer that understands user context and anticipates needs through features like the Cognitive Cartographer and Precognitive Assist, empowering unmatched productivity via its Think Tank knowledge graph and superagent capabilities.

### 7.3 Tech Stack (StuckAI)  
Built on the InteliTree Base Stack (K3s, Supabase, Neo4j, IAIE + LiteLLM). Hybrid client: Electron desktop (OS hooks), Next.js (IAT-WebApp) Think Tank (Shadcn/UI, Tailwind, React Flow), React Native (IAT-Mobile) companion. Backend: IAT-Microservices (Bun/Hono, Drizzle). Key tech: OCR, OS Accessibility APIs, NATS/Kafka, RobotJS/Puppeteer, AR SDKs.

### 7.4 File Storage & Structure (StuckAI)  
Project root `[LOCAL_INTELITREE_CLONE_PATH]/StuckAI/` contains:  
* `Docs/` – planning, logs, Creation & Development Guides, Memory Bank.  
* `App_Code/` – `desktop-app`, `dashboard-webapp`, `mobile-app`, `services/`, shared types, tests.  
Rules mirror located at `.cursor/rules/StuckAI_rules.mdc`.

---

## 8. Droid’s Memory Bank (StuckAI)  
*Last Updated: YYYY-MM-DD HH:MM:SS*  

<!-- Droid to generate a Mermaid diagram here based on the standard Memory Bank file structure defined in Appendix D.2 of the Creation Guide. -->

* **StuckAI_projectbrief.md (Summary)** – StuckAI revolutionizes HCI via universal AI sticky notes (see 7.1).  
* **StuckAI_productContext.md (Summary)** – Targets Everyday Achievers, Power Users/Devs, Enterprise Teams; solves app switching & fragmented AI; driven by democratizing AI and ending tool chaos.  
* **StuckAI_activeContext.md (Summary – Initial State)** – Foundational file population complete; awaiting stakeholder review & initial commit.  
* **StuckAI_systemPatterns.md (Summary)** – Hybrid Client Architecture; IAT-Microservices; Event-Driven (NATS/Kafka); Federated Neo4j KG; Orchestrator-Worker AI Swarm.  
* **StuckAI_techContext.md (Summary)** – InteliTree Base Stack, LiteLLM, Electron/Next.js/React Native, Bun/Hono backend, tooling stack listed in 7.3.  
* **StuckAI_progress.md (Summary – Initial State)** – Project initiated; Creation Guide and Rules populated; foundational docs generated.

---

## 9. Current Task

**Task:** Foundational file population by Droid complete. Awaiting stakeholder review of all generated/populated files and initial Git commit. **Next:** Draft Day 1 of `Docs/StuckAI_Development_Guide_V1.0.md`.

---
